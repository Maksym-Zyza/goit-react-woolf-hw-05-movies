{"version":3,"file":"static/js/86.51320dcb.chunk.js","mappings":"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","sources":["components/TrendingList/MoviesList.jsx","helpers/vote.js","pages/HomePage.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport { text } from '../../helpers/text';\nimport defaultImg from '../../img/default.jpg';\nimport { IMG_SRC } from 'variables';\nimport { getVoteAverageValue } from 'helpers/vote';\n\nconst MoviesList = ({ trending, time }) => {\n  const location = useLocation();\n  let title = time === 'day' ? text.TitleMovies : text.WeekMovies;\n  if (time === 'inTheatres') {\n    title = text.TitleTheatres;\n  }\n\n  return (\n    <div>\n      <h2 className=\"pageTitle\">{title}</h2>\n\n      <ul className=\"moviesList\">\n        {trending.map(({ id, poster_path, title, vote_average }) => (\n          <Link key={id} to={`/movies/${id}`} state={location}>\n            <li>\n              <img\n                src={poster_path ? `${IMG_SRC}${poster_path}` : defaultImg}\n                alt={title}\n              />\n              <h4> {title}</h4>\n              <div>\n                <span>{getVoteAverageValue(vote_average)}</span>\n              </div>\n            </li>\n          </Link>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","export const getVoteAverageValue = vote_average => {\n  return vote_average > 0\n    ? parseFloat(Math.round(vote_average * 100) / 100).toFixed(1)\n    : 0;\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport ScrollButton from '../components/ScrollButton/ScrollButton';\nimport MoviesList from '../components/TrendingList/MoviesList';\nimport ToolsMenu from '../components/ToolsMenu/ToolsMenu';\nimport Button from '../components/Button/Button';\nimport Loader from '../components/Loader/Loader';\nimport api from '../api/movies-api';\n\nconst HomePage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [trending, setTrending] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [time, setTime] = useState(searchParams.get('time') ?? 'day');\n  const [page, setPage] = useState(Number(searchParams.get('page') ?? 1));\n\n  useEffect(() => {\n    setIsLoading(true);\n    api\n      .getMoviesTrending('movie', time, page)\n      .then(results => {\n        setTrending(prev => [...prev, ...results]);\n        setSearchParams({ page, time });\n      })\n      .catch(error => {\n        console.log(error);\n        return [];\n      })\n      .finally(() => setIsLoading(false));\n  }, [time, page, setSearchParams]);\n\n  const handlePeriod = e => {\n    if (time === e.target.dataset.value) return;\n    setTime(e.target.dataset.value);\n    setPage(1);\n    setTrending([]);\n  };\n\n  const handleBtn = () => {\n    setPage(prev => prev + 1);\n  };\n\n  return (\n    <div className=\"container\">\n      <MoviesList trending={trending} time={time} />\n\n      <ToolsMenu changeSelect={handlePeriod} />\n\n      {trending.length > 0 && (\n        <ScrollButton scrollStepInPx=\"50\" delayInMs=\"16\" />\n      )}\n\n      {trending.length > 0 && <Button onClick={handleBtn} />}\n\n      {isLoading && <Loader isLoading={isLoading} />}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["_ref","trending","time","location","useLocation","title","text","_jsxs","children","_jsx","className","map","_ref2","id","poster_path","vote_average","Link","to","concat","state","src","IMG_SRC","defaultImg","alt","getVoteAverageValue","parseFloat","Math","round","toFixed","_searchParams$get","_searchParams$get2","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","setTrending","_useState3","_useState4","isLoading","setIsLoading","_useState5","get","_useState6","setTime","_useState7","Number","_useState8","page","setPage","useEffect","api","then","results","prev","_toConsumableArray","catch","error","console","log","finally","MoviesList","ToolsMenu","changeSelect","e","target","dataset","value","length","ScrollButton","scrollStepInPx","delayInMs","Button","onClick","Loader"],"sourceRoot":""}