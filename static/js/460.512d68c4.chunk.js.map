{"version":3,"file":"static/js/460.512d68c4.chunk.js","mappings":"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","sources":["components/TrendingList/TrendingTvShowsList.jsx","pages/TvShowsPage.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport { text } from '../../helpers/text';\nimport defaultImg from '../../img/default.jpg';\nimport { IMG_SRC } from 'variables';\n\nconst TrendingTvShows = ({ trending, time }) => {\n  const location = useLocation();\n  const title = time === 'day' ? text.TitleTrending : text.WeekTrending;\n\n  return (\n    <div>\n      <h2 className=\"pageTitle\">{title}</h2>\n\n      <ul className=\"moviesList\">\n        {trending.map(({ id, name, poster_path, vote_average }) => (\n          <Link key={id} to={`/tvShows/${id}`} state={location}>\n            <li>\n              <img\n                src={poster_path ? `${IMG_SRC}${poster_path}` : defaultImg}\n                alt=\"TvShows poster\"\n              />\n              <h4> {name}</h4>\n              <div>\n                <span>{vote_average}</span>\n              </div>\n            </li>\n          </Link>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TrendingTvShows;\n","import React from 'react';\nimport ScrollButton from '../components/ScrollButton/ScrollButton';\nimport TrendingTvShowsList from '../components/TrendingList/TrendingTvShowsList';\nimport ToolsMenu from '../components/ToolsMenu/ToolsMenu';\nimport Button from '../components/Button/Button';\nimport Loader from '../components/Loader/Loader';\nimport api from '../api/movies-api';\n\nclass TvShowsPage extends React.Component {\n  state = {\n    trending: [],\n    isLoading: false,\n    type: 'tv',\n    time: 'day',\n    page: 1,\n  };\n\n  componentDidMount() {\n    this.fetchTrending();\n  }\n\n  componentDidUpdate(_, prevState) {\n    const { time, type } = this.state;\n\n    if (prevState.time !== time && time) {\n      this.setState({ trending: [] });\n      this.fetchTrending();\n    }\n    if (prevState.type !== type && type) {\n      this.setState({ trending: [] });\n      this.fetchTrending();\n    }\n  }\n\n  fetchTrending = () => {\n    const { type, time, page } = this.state;\n    this.setState({ isLoading: true });\n\n    api\n      .getMoviesTrending(type, time, page)\n      .then(results => {\n        this.setState(prevState => ({\n          trending: [...prevState.trending, ...results],\n          page: prevState.page + 1,\n        }));\n      })\n      .catch(error => {\n        console.log(error);\n        return [];\n      })\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  changeSelect(e) {\n    this.setState({ time: e.target.dataset.value, page: 1 });\n  }\n\n  render() {\n    const { trending, isLoading, time } = this.state;\n    const movieList = trending.length > 0 && !isLoading;\n\n    return (\n      <div className=\"container\">\n        <TrendingTvShowsList trending={trending} time={time} />\n\n        <ToolsMenu changeSelect={this.changeSelect.bind(this)} />\n\n        {movieList && <ScrollButton scrollStepInPx=\"50\" delayInMs=\"16\" />}\n\n        {movieList && <Button onClick={this.fetchTrending} />}\n\n        {isLoading && <Loader isLoading={isLoading} />}\n      </div>\n    );\n  }\n}\n\nexport default TvShowsPage;\n"],"names":["_ref","trending","time","location","useLocation","title","text","_jsxs","children","_jsx","className","map","_ref2","id","name","poster_path","vote_average","Link","to","concat","state","src","IMG_SRC","defaultImg","alt","TvShowsPage","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","isLoading","type","page","fetchTrending","_this$state","setState","api","then","results","prevState","_toConsumableArray","catch","error","console","log","finally","_createClass","key","value","this","_","_this$state2","e","target","dataset","_this$state3","movieList","TrendingTvShowsList","ToolsMenu","changeSelect","bind","ScrollButton","scrollStepInPx","delayInMs","Button","onClick","Loader","React"],"sourceRoot":""}