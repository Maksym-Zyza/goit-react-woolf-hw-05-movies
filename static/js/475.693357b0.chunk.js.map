{"version":3,"file":"static/js/475.693357b0.chunk.js","mappings":"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","sources":["api/movies-api.js","components/ItemDetails/TvShowsDetails.jsx","pages/TvShowsDetailsPage.jsx","webpack://react-homework-template/./src/components/ItemDetails/Details.module.scss?b7be"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '523a15ded98cd05fab36993344058e43';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: window.localStorage?.getItem('language'),\n  page: 1,\n};\n\n// список популярных фильмов\nconst getMoviesTrending = async (type, time, page) => {\n  try {\n    const url = { url: `trending/${type}/${time}`, params: { page } };\n    const { data } = await axios(url);\n    return data.results;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n};\n\n// поиск кинофильма по ключевому слову\nasync function getSerchMovies(query, page) {\n  try {\n    const url = { url: 'search/movie', params: { query, page } };\n    const response = await axios(url);\n    return response;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\ngetSerchMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\n// запрос детальной информации о фильме\nasync function getMovieDetails(movie_id) {\n  try {\n    const url = { url: `movie/${movie_id}` };\n    const { data } = await axios(url, movie_id);\n    return data;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\nasync function getMovieVideo(movieId) {\n  try {\n    const url = { url: `movie/${movieId}/videos` };\n    const { data } = await axios(url, movieId);\n    return data;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\n// запрос информации о актёрском составе\nasync function getMovieCredits(movie_id) {\n  try {\n    const url = { url: `movie/${movie_id}/credits` };\n    const response = axios(url, movie_id);\n    return response;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\n// запрос обзоров для страницы кинофильма\nasync function getMoviesReviews(movie_id) {\n  try {\n    const url = { url: `movie/${movie_id}/reviews` };\n    const response = axios(url, movie_id);\n    return response;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\n// Get the list of popular people. Updates daily.\nasync function getPersons(page) {\n  try {\n    const url = { url: `person/popular`, params: { page } };\n    const { data } = await axios(url);\n    return data;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\n// Get the images for a person.\nasync function getPersonPopular() {\n  try {\n    const url = { url: `person/popular` };\n    const { data } = await axios(url);\n    return data;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\n// запрос детальной информации для страницы персон\nasync function getPersonImages(person_id) {\n  try {\n    const url = { url: `person/${person_id}/images` };\n    const { data } = await axios(url, person_id);\n    return data;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\n// запрос детальной информации для страницы персон\nasync function getPersonDetails(person_id) {\n  try {\n    const url = { url: `person/${person_id}` };\n    const { data } = await axios(url, person_id);\n    return data;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\n// запрос детальной информации для страницы TV shows\nasync function getTvDetails(movie_id) {\n  try {\n    const url = { url: `tv/${movie_id}` };\n    const { data } = await axios(url, movie_id);\n    return data;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n}\n\n// What movies are in theatres?\n// URL: /discover/movie?primary_release_date.gte=2014-09-15&primary_release_date.lte=2014-10-22\nconst getInTheatres = async (startDate, endDate, page) => {\n  try {\n    const url = {\n      url: `discover/movie?primary_release_date.gte=${startDate}&primary_release_date.lte=${endDate}`,\n      params: { page },\n    };\n    const { data } = await axios(url);\n    return data.results;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n};\n\n// Most popular movies\n// URL :/discover/movie?sort_by=popularity.desc\nconst getMostPopular = async page => {\n  try {\n    const url = {\n      url: `discover/movie?sort_by=popularity.desc`,\n      params: { page },\n    };\n    const { data } = await axios(url);\n    return data.results;\n  } catch (error) {\n    alert(error);\n    return [];\n  }\n};\n\nconst api = {\n  getMoviesTrending,\n  getSerchMovies,\n  getMovieDetails,\n  getMovieVideo,\n  getPersons,\n  getPersonPopular,\n  getPersonImages,\n  getPersonDetails,\n  getTvDetails,\n  getMovieCredits,\n  getMoviesReviews,\n  getInTheatres,\n  getMostPopular,\n};\n\nexport default api;\n\n// Які фільми мають найвищий рейтинг R?\n// URL :/discover/movie/?certification_country=US&certification=R&sort_by=vote_average.desc\n\n// Які найпопулярніші дитячі фільми?\n// URL :/discover/movie?certification_country=US&certification.lte=G&sort_by=popularity.desc\n\n// Які найкращі фільми 2010 року?\n// URL :/discover/movie?primary_release_year=2010&sort_by=vote_average.desc\n\n// Які найкращі драми вийшли цього року?\n// URL :/discover/movie?with_genres=18&primary_release_year=2014\n\n// Які науково-фантастичні фільми з найвищим рейтингом, в яких знімався Том Круз?\n// URL :/discover/movie?with_genres=878&with_cast=500&sort_by=vote_average.desc\n\n// Які комедії Вілла Феррелла є найкасовішими?\n// URL :/discover/movie?with_genres=35&with_cast=23659&sort_by=revenue.desc\n\n// Бред Пітт і Едвард Нортон коли-небудь знімалися разом у кіно?\n// URL :/discover/movie?with_people=287,819&sort_by=vote_average.desc\n\n// Девід Фінчер коли-небудь працював з Руні Марою?\n// URL :/discover/movie?with_people=108916,7467&sort_by=popularity.desc\n\n// Які драми найкращі?\n// URL :/discover/movie?with_genres=18&sort_by=vote_average.desc&vote_count.gte=10\n\n// Які фільми Ліама Нісона з найвищим рейтингом «R»?\n// URL :/discover/movie?certification_country=US&certification=R&sort_by=revenue.desc&with_cast=3896\n","import { useState, useEffect } from 'react';\nimport st from './Details.module.scss';\nimport api from '../../api/movies-api';\nimport defaultImg from '../../img/default.jpg';\nimport Loader from '../Loader/Loader';\nimport { text } from '../../helpers/text';\n\nexport default function TvShowsDetails() {\n  const [src] = useState('https://image.tmdb.org/t/p/w500');\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const id = window.location.pathname.split('/').pop();\n    setIsLoading(true);\n\n    api\n      .getTvDetails(id)\n      .then(result => {\n        setMovies({ ...result });\n      })\n      .catch(error => {\n        console.log(error);\n        return [];\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      {movies ? (\n        <div className={st.details}>\n          <h2>{movies.name}</h2>\n          {movies?.poster_path ? (\n            <img src={`${src}${movies?.poster_path}`} alt=\"Poster poster\" />\n          ) : (\n            <img src={defaultImg} alt=\"Was not found\" />\n          )}\n\n          <div className={st.details}>\n            <p>\n              First air date: <span>{movies.first_air_date}</span>\n            </p>\n            <h3>{text.Overview}: </h3>\n            <span>{movies.overview}</span>\n            <p>\n              {text.Popularity}:{' '}\n              <span>{String(Math.round(movies.popularity))}</span>\n            </p>\n            <p>\n              {text.Rating}: <span>{movies.vote_average}</span>\n            </p>\n            <p>\n              {text.Count}: <span>{movies.vote_count}</span>\n            </p>\n            <h3>{text.Genres}:</h3>\n            {movies.genres\n              ? movies.genres.map(({ id, name }) => <p key={id}>{name}</p>)\n              : `We don't have any ganres for this TV Shows.`}\n\n            <h3>{text.Poster}</h3>\n            <img src={`${src}${movies?.backdrop_path}`} alt=\"Poster\" />\n          </div>\n        </div>\n      ) : (\n        <Loader isLoading={isLoading} />\n      )}\n    </>\n  );\n}\n","import { useLocation, useNavigate } from 'react-router-dom';\nimport TvShowsDetails from '../components/ItemDetails/TvShowsDetails';\nimport { text } from '../helpers/text';\n\nexport default function TvShowsDetailsPage() {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const handleGoBack = () => {\n    navigate(location.state?.from ?? '/');\n  };\n\n  return (\n    <div className=\"container position\">\n      <button className=\"movieBtn\" type=\"button\" onClick={handleGoBack}>\n        &#9668; {text.Back}\n      </button>\n\n      <TvShowsDetails />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"details\":\"Details_details__DjA0o\",\"imgHover\":\"Details_imgHover__-1FU4\",\"movieDetails\":\"Details_movieDetails__SdpLD\",\"link\":\"Details_link__iNLJA\",\"linkSign\":\"Details_linkSign__+8YEp\",\"btnPlay\":\"Details_btnPlay__eetqI\",\"movieVideo\":\"Details_movieVideo__BfCdX\",\"noVideo\":\"Details_noVideo__ahp-1\"};"],"names":["axios","api_key","language","_window$localStorage","window","localStorage","getItem","page","getMoviesTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","type","time","url","_yield$axios","data","_context","prev","next","concat","params","sent","abrupt","results","t0","alert","stop","_x","_x2","_x3","apply","arguments","getSerchMovies","_x4","_x5","_getSerchMovies","_callee4","query","response","_context4","_getMovieDetails","_callee5","movie_id","_yield$axios4","_context5","_getMovieVideo","_callee6","movieId","_yield$axios5","_context6","_getMovieCredits","_callee7","_context7","_getMoviesReviews","_callee8","_context8","_getPersons","_callee9","_yield$axios6","_context9","_getPersonPopular","_callee10","_yield$axios7","_context10","_getPersonImages","_callee11","person_id","_yield$axios8","_context11","_getPersonDetails","_callee12","_yield$axios9","_context12","_getTvDetails","_callee13","_yield$axios10","_context13","propTypes","PropTypes","getInTheatres","_ref2","_callee2","startDate","endDate","_yield$axios2","_context2","_x14","_x15","_x16","getMostPopular","_ref3","_callee3","_yield$axios3","_context3","_x17","api","getMovieDetails","_x6","getMovieVideo","_x7","getPersons","_x10","getPersonPopular","getPersonImages","_x11","getPersonDetails","_x12","getTvDetails","_x13","getMovieCredits","_x8","getMoviesReviews","_x9","TvShowsDetails","_useState","useState","src","_slicedToArray","_useState3","_useState4","movies","setMovies","_useState5","_useState6","isLoading","setIsLoading","useEffect","id","location","pathname","split","pop","then","result","_objectSpread","catch","error","console","log","finally","_jsx","_Fragment","children","_jsxs","className","st","name","poster_path","alt","defaultImg","first_air_date","text","overview","String","Math","round","popularity","vote_average","vote_count","genres","map","backdrop_path","Loader","TvShowsDetailsPage","useLocation","navigate","useNavigate","onClick","_location$state$from","_location$state","state","from"],"sourceRoot":""}